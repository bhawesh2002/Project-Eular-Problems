/*Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.*/

#include <iostream>

using namespace std;

int main(){
    int index = 50;
    long long fibonacci_sequence[index] = {1 , 2 , 3};
    int i = 1, j = 2 , k = 3;
    long sum = 0;
    for (long a = 0; a < 50; a++)
    {
        fibonacci_sequence[k] = fibonacci_sequence[i] + fibonacci_sequence[j];
        cout << fibonacci_sequence[a] << endl;
        if (fibonacci_sequence[a] % 2 == 0)
        {
            sum = sum + fibonacci_sequence[a];
        }        
        i++;
        j++;
        k++;
        if (fibonacci_sequence[a] > 4000000)
        {
            break;
        }
        
    }
    cout << "sum:- " << sum << endl;
    return 0;
}